# -*- coding: utf-8 -*-
"""analise_de_imigracao.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GUIzYFilxJ4YCN7ws2bm6KFqxV9bEq74
"""

# importando a biblioteca pandas

import pandas as pd

# trazendo o arquivo csv para analise

df = pd.read_csv('/content/imigrantes_canada.csv')

#leitura do data frame

df

#informações sobre o data frame

df.info()

# criando um novo indice

df.set_index('País', inplace=True)

"""criando a variável anos igual à lista com os intervalos de ano. Ou seja, usamos a função list() e, nela, colocamos a função map(), porque vamos pedir para que os valores fiquem em string. Desse modo, vamos ter os valores como objetos e não como números."""

anos = list(map(str, range(1980, 2014)))

# executando a variavel

anos

# pegar somente os dados do Brasil. Podemos usar a propriedade loc do Pandas

brasil = df.loc['Brasil', anos]

# executando a variavel

brasil

#criar o dataframe chamado dados_brasil que vai ser igual à pd.DataFrame().
#Entre os parênteses, adicionamos o dicionário brasil_dict.

brasil_dict = {'ano': brasil.index.tolist(), 'imigrantes': brasil.values.tolist()}
dados_brasil =  pd.DataFrame(brasil_dict)

# executando a variavel criada

dados_brasil

"""# Realizando comparações entre país"""

# importando o matplotlib.pyplot para ilustração grafica

import matplotlib.pyplot as plt

# criano a configuração do grafico
fig, ax = plt.subplots(figsize=(8,4))

# plotando o grafico
ax.plot(dados_brasil['ano'], dados_brasil['imigrantes'], color='green', lw=3)

# criando o titulo do grafico
ax.set_title('Imigração do Brasil para o Canadá\n1980 a 2013', fontsize=18)

# criando o label do eixo x
ax.set_xlabel('Ano', fontsize=14)
ax.set_ylabel('Número de imigrantes', fontsize=14)
ax.xaxis.set_tick_params(labelsize=12)
ax.yaxis.set_tick_params(labelsize=12)

# criando os ticks do eixo x
ax.xaxis.set_major_locator(plt.MultipleLocator(5))

ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)

fig.savefig('imigrantes_brasil_canada.png', transparent=False, dpi=300, bbox_inches='tight')
# exibindo o grafico
plt.show()

#criando a figura
fig, axs = plt.subplots(1,2, figsize=(15,5))

# plotando o grafico
axs[0].plot(dados_brasil['ano'], dados_brasil['imigrantes'])
axs[0].set_title('Imigração do Brasil para o Canadá\n1980 e 2013')
axs[0].set_xlabel('Ano')
axs[0].set_ylabel('Número de imigrantes')
axs[0].xaxis.set_major_locator(plt.MultipleLocator(5))
axs[0].grid()

#criando grafico bloxplot para avaliação visual estatistica
axs[1].boxplot(dados_brasil['imigrantes'])
axs[1].set_title('Boxplot da imigração do Brasil para o Canadá\n1980 a 2013')
axs[1].set_xlabel('Brasil')
axs[1].set_ylabel('Número de imigrantes')
axs[1].grid()


plt.show()

dados_brasil.describe()

"""# Comparações de Migração"""

#criando data frame para comparação entre argentina e brasil

df_comparacao = df.loc[['Brasil', 'Argentina'], anos]

# criando o data frame com a função T que pode ser transposto

df_comparacao = df_comparacao.T
df_comparacao.head()

#aumentando o tamanho da area do grafico
plt.figure(figsize=(10,6))

# pegando os dados do data frame e colocando a cor verde para a linha referente ao brasil
plt.plot(df_comparacao['Brasil'],label = 'Brasil', color='green',lw=3)

# pegando os dados do data frame e colocando a cor azul para a linha referente a argentina
plt.plot(df_comparacao['Argentina'],label ='Argentina', color= 'blue', lw=3)

# criando a legenda
plt.legend()

# criando o titulo do grafico
plt.title('Imigração do Brasil e Argentina para o Canadá \n1980 a 2013')

# criando o label do eixo x
plt.xlabel('Ano')

# criando o label do eixo y
plt.ylabel('Número de imigrantes')

# criando os ticks do eixo x
plt.xticks(['1980', '1985', '1990', '1995', '2000', '2005', '2010'])

plt.grid(linestyle='--')

plt.show()

"""# Outras comparações"""

#criando a figura
fig, axs = plt.subplots(2,2, figsize=(15,6))
fig.subplots_adjust(hspace=0.5, wspace=0.3)

#titulo dos graficos
fig.suptitle('Imigração dos quatro maiores países da America do Sul para o Canadá\n 1980 a 2013')

#criando o grafico Brasil
axs[0,0].plot(df.loc['Brasil', anos])
axs[0,0].set_title('Brasil')

#criando o grafico Argentina
axs[0,1].plot(df.loc['Argentina', anos])
axs[0,1].set_title('Argentina')

#criando o grafico Colômbia
axs[1,0].plot(df.loc['Colômbia', anos])
axs[1,0].set_title('Colômbia')

#criando o grafico Peru
axs[1,1].plot(df.loc['Peru', anos])
axs[1,1].set_title('Peru')

#configurando o ano de 5 em 5 anos a partir de 1980 e até 2013
for ax in axs.flat:
  ax.xaxis.set_major_locator(plt.MultipleLocator(5))

#definindo as colunas
for ax in axs.flat:
  ax.set_xlabel('Ano')
  ax.set_ylabel('Número de imigrantes')

#definindo o numero minimo e maximo de imigrantes para não haver distorção comparativa

ymin = 0
xmax = 7000

for ax in axs.ravel():
  ax.set_ylim(ymin, xmax)

plt.show()

"""# Países da America do Sul"""

america_sul = df.query('Região == "América do Sul"')
america_sul

america_sul_sorted = america_sul.sort_values('Total', ascending=True)

# cores das barras
cores = []
for pais in america_sul_sorted.index:
  if pais == 'Brasil':
    cores.append('green')
  else:
    cores.append('silver')

# criando o grafico
fig, ax = plt.subplots(figsize=(12,5))
ax.barh(america_sul_sorted.index, america_sul_sorted['Total'], color=cores)
ax.set_title('America do Sul: Brasil foi o quarto país com mas imigrantes\n para o Canadá no período 1980 a 2013',fontsize=18)
ax.set_xlabel('Número de Imigrantes', fontsize=14)
ax.set_ylabel('')
ax.xaxis.set_tick_params(labelsize=12)
ax.yaxis.set_tick_params(labelsize=12)

#colocando em sequencia
for i, v in enumerate(america_sul_sorted['Total']):
  ax.text(v+20, i, str(v), color='black', fontsize=10, ha='left', va='center')

#retirando alguns rotulos para uma visualização mais limpa
ax.set_frame_on(False)
ax.get_xaxis().set_visible(False)
ax.tick_params(axis='both', which='both', length=0)

#salvando em png para visualização em reunião
fig.savefig('umigrantes_america_sul.png', transparent=False, dpi=300, bbox_inches='tight')

plt.show()

"""# Comparação Global"""

# Importando a biblioteca seanborn

import seaborn as sns

# opções maiores de cores

sns.set_theme()

#criando uma variavel com os 10 maiores países com imigração para o Canadá

top_10 = df.sort_values('Total', ascending=False).head(10)

#exacutanddo a variavel

top_10

#criando as opções de paletas do seaboarn

def gerar_grafico_paleta(palette):
  fig, ax = plt.subplots(figsize=(8,4))
  ax = sns.barplot(data=top_10, y=top_10.index, x='Total', orient= 'h', palette=palette)
  ax.set_title ('Países com maior imigrantes para o Canadá\n1980 a 2013', fontsize=16)
  ax.set_xlabel('Número de Imigrantes', fontsize=14)
  ax.set_ylabel('')
  plt.show()

# configurando o grafico com a melhor visualização
fig, ax = plt.subplots(figsize=(8,4))
ax = sns.barplot(data=top_10, y=top_10.index, x='Total', orient= 'h', palette='tab10')

# dando um titulo
ax.set_title ('Países com maior imigrantes para o Canadá\n1980 a 2013', fontsize=16)

# os eixos do grafico
ax.set_xlabel('Número de Imigrantes', fontsize=14)
ax.set_ylabel('')

#retirando as linhas de caixa do grafico para uma visualização mais "limpa"
sns.despine(left=True)

# carregando o grafico
plt.show()

"""# Graficos Interativos"""

# importando a biblioteca que tem a função de grafico interativo

import plotly.express as px

#criando o grafico
#configurando as linhas x e y, titulo e cor da linha
#configurando o grau de inclinação da linha "ano" para -45

fig = px.line(dados_brasil, x='ano', y='imigrantes',
              title='Imigração do Brasil para o Canadá\n1980 a 2013')
fig.update_traces(line_color='green', line_width=4)
fig.update_layout(width=1000, height=500, xaxis={'tickangle':-45},
                  font_family='Arial',
                  font_size=14,
                  font_color='grey',
                  title_font_family='black',
                  title_font_size=22,
                  xaxis_title='Ano',
                  yaxis_title='Número de Imigrantes')

fig.show()

"""Comparação com todos os países da America do Sul"""

america_sul.head()

#criando uma variavel para separar os paises da america do sul, excluindo algumas colunas

df_america_sul_clean = america_sul.drop(['Continente','Região', 'Total'], axis=1)
america_sul_final = df_america_sul_clean.T

america_sul_final.head()

#criando o grafico interativo com as linhas para cada país.
#na legenda sendo possivel selecionar e retirar os países para melhor comparar

fig = px.line(america_sul_final, x=america_sul_final.index, y=america_sul_final.columns, color='País', markers=True,
              title='Imigração dos países da América do Sul para o Canadá de 1980 a 2013')
fig.update_layout(
    xaxis={'tickangle': -45},
    xaxis_title='Ano',
    yaxis_title='Número de imigrantes')

fig.show()

"""Salvando em HTML"""

# salvando em HTML para apresentação

fig.write_html('imigrantes_america_sul.html')

